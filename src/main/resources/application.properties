# Server
server.port=8080
server.servlet.context-path=/api

# Datasource
spring.jpa.database=mysql
spring.datasource.url=jdbc:mysql://localhost:3306/order_management
spring.datasource.username=root
spring.datasource.password=12345
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# Spring configurations
spring.profiles.active=local
spring.application.name=order-management

# Kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.client-id= OrderProducerClient
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks= all
spring.kafka.producer.retries= 5
spring.kafka.producer.buffer-memory= 33554432
spring.kafka.producer.batch-size= 16384
spring.kafka.producer.linger-ms= 15000
spring.kafka.producer.enable-Idempotence= true
spring.kafka.producer.transactionalId= OrderTransId

#Kafka consumer
spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.client-id= OrderConsumerClient
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer 
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset= latest
spring.kafka.consumer.isolationLevel= read_committed
spring.kafka.consumer.max-poll-records= 20
spring.kafka.consumer.heartbeat-interval= 5000

#kafka topics and consumer groups
kafka.topic.name.orders= Orders
kafka.topic.name.status= orderStatus
kafka.consumer.groupId= OrdersGroup